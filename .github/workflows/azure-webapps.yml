name: Build and Deploy Next.js + WS server to Azure

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # üì• ‡∏î‡∏∂‡∏á‡πÇ‡∏Ñ‡πâ‡∏î
      - uses: actions/checkout@v4

      # üü¢ Node.js 20
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

        # üì¶ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á dependencies
      - name: Install dependencies
        run: npm install

      # üèóÔ∏è Build Next.js (standalone)
      - name: Build Next.js app
        run: npm run build
        env:
          NODE_ENV: production
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          PI_API_KEY: ${{ secrets.PI_API_KEY }}

      # üìÇ ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÑ‡∏ü‡∏•‡πå deploy
      - name: Prepare artifact
        run: |
          mkdir -p out-azure

          # 1. standalone build
          cp -R .next/standalone/* out-azure/

          # 2. static assets
          mkdir -p out-azure/.next
          cp -R .next/static out-azure/.next/

          # 3. public
          if [ -d public ]; then cp -R public out-azure/; fi

          # 4. prisma schema
          if [ -d prisma ]; then cp -R prisma out-azure/; fi

          # 5. runtime files (‡πÅ‡∏Ñ‡πà‡∏û‡∏ß‡∏Å‡∏ô‡∏µ‡πâ‡∏û‡∏≠)
          cp package.json server-custom.js out-azure/

          echo "‚úÖ Artifact prepared:"
          ls -la out-azure

      # üöÄ Deploy ‡πÑ‡∏õ Azure
      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v3
        with:
          app-name: dashboard-benchtest
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
          package: out-azure
